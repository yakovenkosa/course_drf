name: Django CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
      - uses: actions/checkout@v3

      - name: Set up Python
      - uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install flake8
        run: |
          python3 -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: flake8 .

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          sudo service postgresql start
          sudo -u postgres psql -c "ALTER USER postgres PASSWORD '852123654';"
          sudo -u postgres psql -c "CREATE DATABASE materials;"
          sudo -u postgres psql -c "CREATE ROLE runner WITH LOGIN PASSWORD '852123654';"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE materials TO runner;"
          sudo -u postgres psql -c "GRANT CREATE ON SCHEMA public TO runner;"
          echo "DATABASE_URL=postgres://runner:852123654@localhost/materials" >> $GITHUB_ENV

      - name: Run migrate
        run: |
          python3 manage.py migrate

      - name: Run tests
        run: |
          python3 manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY}}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY}}
          ROOT_PASSWORD: ${{ secrets.ROOT_PASSWORD}}
        run: |
          sshpass root@31.130.148.120 "cd /var/www/html/course_drf && git pull && /var/www/html/course_drf pip install && sudo systemctl restart nginx"
