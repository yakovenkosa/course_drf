version: "3"

services:

  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - "6379"
  db:
    image: postgres
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  app:
      build: .
      tty: true
      ports:
        - "8000:8000"
      command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
      depends_on:
        db:
          condition: service_healthy
      volumes:
        - .:/app
      env_file:
        - .env

  celery:
    build: .
    tty: true
    command: celery -A config worker -l info
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    env_file:
      - .env

  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l info
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    env_file:
      - .env
